{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","concat","FindMovie","onAdd","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovie","_useState7","_useState8","isError","setIsError","buttonText","_Fragment","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","Object","hasOwn","data","Poster","Title","Plot","imdbID","normalizeData","finally","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","trim","onClick","App","setMovies","newMovie","find","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,YAAWC,SAAA,CACvCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACE,UAAQ,cACRC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAa,UAAQ,aAAYC,SAAEH,EAAMQ,aAI1DP,eAAA,OAAKC,UAAU,UAAU,UAAQ,mBAAkBC,SAAA,CAChDH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAS,UAAQ,WAAUR,SAAC,iBAK3C,EChCKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,wBCdFC,EAAO,mCAAAC,OADG,YCST,IAAMC,EAA6B,SAAHnB,GAAmB,IAAboB,EAAKpB,EAALoB,MAC3CC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BZ,EAAKc,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAkCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA0BR,mBAAuB,MAAKS,EAAAP,YAAAM,EAAA,GAA/C7B,EAAK8B,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8BX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAmDpBG,EAAapC,EACf,eACA,eAEJ,OACEC,eAAAoC,WAAA,CAAAlC,SAAA,CACEF,eAAA,QAAMC,UAAU,aAAaoC,SAlCZ,SAACC,GDjCjB,IAAkBC,ECkCrBD,EAAME,iBAENb,GAAa,IDpCQY,ECsCZhC,EDrCJkC,MAAM,GAADzB,OAAID,EAAO,OAAAC,OAAMuB,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,mBACR,KCiCEL,MAAK,SAAAC,GACJ,GAAIK,OAAOC,OAAON,EAAK,SACrB,MAAM,IAAII,MAGZjB,EA3BgB,SAACoB,GACrB,IACEC,EACED,EADFC,OAAQC,EACNF,EADME,MAAOC,EACbH,EADaG,KAAMC,EACnBJ,EADmBI,OAGvB,MAAO,CACL/C,MAAO6C,EACP5C,YAAa6C,EACbhD,OAAmB,QAAX8C,EACJA,EACA,4DACJzC,QAAQ,8BAADM,OAAgCsC,GACvCxC,OAAQwC,EAEZ,CAaeC,CAAcZ,GACzB,IACCE,OAAM,kBAAMX,GAAW,EAAK,IAC5BsB,SAAQ,WACP7B,GAAa,GACbJ,EAAS,GACX,GACJ,EAgBwDrB,SAAA,CAClDF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQwD,QAAQ,cAAavD,SAAC,gBAI/CC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE,UAAQ,aACRuD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3D,UAAU,QACV4D,MAAOtD,EACPuD,SArEc,SAACxB,GACzBf,EAASe,EAAMyB,OAAOF,OACtB3B,GAAW,EACb,MAsESD,GAEG9B,cAAA,KAAGF,UAAU,iBAAiB,UAAQ,eAAcC,SAAC,4CAM3DF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,eACRuD,KAAK,SACLzD,UAAW+D,IAAG,kBAAmB,CAAE,aAActC,IACjDuC,UAAW1D,EAAM2D,OAAOhE,SAEvBiC,MAIJpC,GAEGI,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,YACRuD,KAAK,SACLzD,UAAU,oBACVkE,QA3DI,WACdpE,GACFmB,EAAMnB,GAGR+B,EAAS,KACX,EAqDqC5B,SACtB,4BAQVH,GAEGC,eAAA,OAAKC,UAAU,YAAY,UAAQ,mBAAkBC,SAAA,CACnDC,cAAA,MAAIF,UAAU,QAAOC,SAAC,YACtBC,cAACN,EAAS,CAACE,MAAOA,SAK9B,EClIaqE,EAAM,WACjB,IAAAjD,EAA4BC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAA1CP,EAAMS,EAAA,GAAEgD,EAAShD,EAAA,GAUxB,OACErB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAGtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACc,EAAS,CAACC,MAfH,SAACoD,GACT1D,EAAO2D,MAAK,SAAAxE,GAAK,OAAIA,EAAMe,SAAWwD,EAASxD,MAAM,KAIzDuD,GAAU,SAAAG,GAAU,SAAAxD,OAAAyD,YAAQD,GAAU,CAAEF,GAAW,GACrD,QAaF,ECxBAI,IAASC,OAAOxE,cAACiE,EAAG,IAAKQ,SAASC,eAAe,Q","file":"static/js/main.19a637b3.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '68309ce0';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const normalizeData = (data: MovieData): Movie => {\n    const {\n      Poster, Title, Plot, imdbID,\n    } = data;\n\n    return {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster !== 'N/A'\n        ? Poster\n        : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n  };\n\n  const handleSearch = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(title)\n      .then(res => {\n        if (Object.hasOwn(res, 'Error')) {\n          throw new Error();\n        }\n\n        setMovie(normalizeData(res as MovieData));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => {\n        setIsLoading(false);\n        setTitle('');\n      });\n  };\n\n  const handleOnAdd = () => {\n    if (movie) {\n      onAdd(movie);\n    }\n\n    setMovie(null);\n  };\n\n  const buttonText = movie\n    ? 'Search again'\n    : 'Find a movie';\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSearch}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {isError\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              disabled={!title.trim()}\n            >\n              {buttonText}\n            </button>\n          </div>\n\n          {movie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={handleOnAdd}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}